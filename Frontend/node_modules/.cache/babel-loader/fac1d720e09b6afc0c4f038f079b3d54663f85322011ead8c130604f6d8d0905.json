{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\QraphQL_Front\\\\src\\\\Comptes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_COMPTES = gql`\n  query {\n    allComptes {\n      id\n      solde\n      dateCreation\n      type\n    }\n  }\n`;\nconst Comptes = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_COMPTES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comptes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.allComptes.map(compte => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"ID: \", compte.id, \", Solde: \", compte.solde, \", Type: \", compte.type, \", Date de cr\\xE9ation: \", compte.dateCreation]\n      }, compte.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Comptes, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Comptes;\nexport default Comptes;\nvar _c;\n$RefreshReg$(_c, \"Comptes\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_COMPTES","Comptes","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","allComptes","map","compte","id","solde","type","dateCreation","_c","$RefreshReg$"],"sources":["D:/projects/QraphQL_Front/src/Comptes.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst GET_COMPTES = gql`\r\n  query {\r\n    allComptes {\r\n      id\r\n      solde\r\n      dateCreation\r\n      type\r\n    }\r\n  }\r\n`;\r\n\r\nconst Comptes = () => {\r\n  const { loading, error, data } = useQuery(GET_COMPTES);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Comptes</h2>\r\n      <ul>\r\n        {data.allComptes.map(compte => (\r\n          <li key={compte.id}>\r\n            ID: {compte.id}, Solde: {compte.solde}, Type: {compte.type}, Date de cr√©ation: {compte.dateCreation}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comptes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGH,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACI,WAAW,CAAC;EAEtD,IAAIG,OAAO,EAAE,oBAAOJ,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAOL,OAAA;IAAAO,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACEX,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBX,OAAA;MAAAO,QAAA,EACGD,IAAI,CAACO,UAAU,CAACC,GAAG,CAACC,MAAM,iBACzBf,OAAA;QAAAO,QAAA,GAAoB,MACd,EAACQ,MAAM,CAACC,EAAE,EAAC,WAAS,EAACD,MAAM,CAACE,KAAK,EAAC,UAAQ,EAACF,MAAM,CAACG,IAAI,EAAC,yBAAoB,EAACH,MAAM,CAACI,YAAY;MAAA,GAD5FJ,MAAM,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACR,EAAA,CAlBID,OAAO;EAAA,QACsBL,QAAQ;AAAA;AAAAuB,EAAA,GADrClB,OAAO;AAoBb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}